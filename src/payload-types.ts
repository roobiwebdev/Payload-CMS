/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    hero: Hero;
    benefits: Benefit;
    socialProof: SocialProof;
    demo: Demo;
    beforeAfter: BeforeAfter;
    faq: Faq;
    contact: Contact;
    footer: Footer;
    pages: Page;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    hero: HeroSelect<false> | HeroSelect<true>;
    benefits: BenefitsSelect<false> | BenefitsSelect<true>;
    socialProof: SocialProofSelect<false> | SocialProofSelect<true>;
    demo: DemoSelect<false> | DemoSelect<true>;
    beforeAfter: BeforeAfterSelect<false> | BeforeAfterSelect<true>;
    faq: FaqSelect<false> | FaqSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero".
 */
export interface Hero {
  id: number;
  backgroundIframeUrl?: string | null;
  badgeText: string;
  mainTitle: string;
  gradientTitle: string;
  subtitle: string;
  primaryCtaText: string;
  primaryCtaLink?: string | null;
  secondaryCtaText?: string | null;
  secondaryCtaLink?: string | null;
  trustIndicators?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  showScrollIndicator?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "benefits".
 */
export interface Benefit {
  id: number;
  title: string;
  subtitle: string;
  benefits: {
    /**
     * Use icon names from lucide-react like Clock, Shield, Brain, Users, BarChart3, Zap
     */
    icon: string;
    title: string;
    description: string;
    metric: string;
    id?: string | null;
  }[];
  ctaText: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "socialProof".
 */
export interface SocialProof {
  id: number;
  title: string;
  subtitle: string;
  stats: {
    value: number;
    suffix?: string | null;
    label: string;
    id?: string | null;
  }[];
  testimonials: {
    name: string;
    role: string;
    company: string;
    content: string;
    rating: number;
    avatar: string;
    id?: string | null;
  }[];
  partners: {
    name: string;
    logo: string;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "demo".
 */
export interface Demo {
  id: number;
  title: string;
  subtitle: string;
  description: string;
  videoThumbnail: string;
  videoTitle: string;
  videoDescription: string;
  features: {
    /**
     * Use lucide-react icon names: Play, Monitor, Smartphone, Tablet, ArrowRight
     */
    icon: string;
    title: string;
    description: string;
    id?: string | null;
  }[];
  ctaText: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "beforeAfter".
 */
export interface BeforeAfter {
  id: number;
  title: string;
  subtitle: string;
  description: string;
  beforeItems: {
    text: string;
    id?: string | null;
  }[];
  afterItems: {
    text: string;
    id?: string | null;
  }[];
  roiStats: {
    value: number;
    suffix?: string | null;
    label: string;
    id?: string | null;
  }[];
  ctaText: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: number;
  title: string;
  subtitle: string;
  description: string;
  faqs: {
    question: string;
    answer: string;
    id?: string | null;
  }[];
  ctaText: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: number;
  title: string;
  subtitle: string;
  description: string;
  contactInfo: {
    phone: string;
    phoneHours: string;
    email: string;
    emailResponseTime: string;
    location: string;
    locationNote: string;
  };
  demoProcess: {
    stepNumber: number;
    title: string;
    description: string;
    id?: string | null;
  }[];
  guarantees: {
    /**
     * Use lucide-react icon names like CheckCircle, Shield
     */
    icon: string;
    text: string;
    id?: string | null;
  }[];
  finalCTA: {
    title: string;
    description: string;
    buttonText: string;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  companyName: string;
  companyDescription: string;
  socialLinks: {
    /**
     * e.g. Linkedin, Twitter, Youtube
     */
    platform: string;
    url: string;
    id?: string | null;
  }[];
  solutionLinks: {
    label: string;
    url: string;
    id?: string | null;
  }[];
  resourcesLinks: {
    label: string;
    url: string;
    id?: string | null;
  }[];
  contactInfo: {
    phone: string;
    email: string;
    address: string;
  };
  bottomLinks: {
    label: string;
    url: string;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  /**
   * URL slug for the page (e.g., "home", "about")
   */
  slug: string;
  status: 'draft' | 'published';
  hero?: {
    badge?: string | null;
    title?: string | null;
    subtitle?: string | null;
    ctaPrimary?: string | null;
    ctaSecondary?: string | null;
    trustIndicators?:
      | {
          icon?: string | null;
          text?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  benefits?:
    | {
        id?: string | null;
        icon?: string | null;
        title?: string | null;
        description?: string | null;
        metric?: string | null;
      }[]
    | null;
  socialProof?: {
    stats?:
      | {
          label?: string | null;
          value?: string | null;
          id?: string | null;
        }[]
      | null;
    testimonials?:
      | {
          id?: string | null;
          name?: string | null;
          role?: string | null;
          company?: string | null;
          content?: string | null;
          rating?: number | null;
          avatar?: string | null;
        }[]
      | null;
    partners?:
      | {
          id?: string | null;
          name?: string | null;
          logo?: string | null;
        }[]
      | null;
  };
  demo?: {
    title?: string | null;
    subtitle?: string | null;
    features?:
      | {
          icon?: string | null;
          title?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  beforeAfter?: {
    before?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
    after?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
    roi?:
      | {
          label?: string | null;
          value?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  faq?:
    | {
        id?: string | null;
        question?: string | null;
        answer?: string | null;
      }[]
    | null;
  contact?: {
    title?: string | null;
    subtitle?: string | null;
    phone?: string | null;
    email?: string | null;
    address?: string | null;
    process?:
      | {
          step?: number | null;
          title?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
    guarantees?:
      | {
          icon?: string | null;
          text?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'hero';
        value: number | Hero;
      } | null)
    | ({
        relationTo: 'benefits';
        value: number | Benefit;
      } | null)
    | ({
        relationTo: 'socialProof';
        value: number | SocialProof;
      } | null)
    | ({
        relationTo: 'demo';
        value: number | Demo;
      } | null)
    | ({
        relationTo: 'beforeAfter';
        value: number | BeforeAfter;
      } | null)
    | ({
        relationTo: 'faq';
        value: number | Faq;
      } | null)
    | ({
        relationTo: 'contact';
        value: number | Contact;
      } | null)
    | ({
        relationTo: 'footer';
        value: number | Footer;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero_select".
 */
export interface HeroSelect<T extends boolean = true> {
  backgroundIframeUrl?: T;
  badgeText?: T;
  mainTitle?: T;
  gradientTitle?: T;
  subtitle?: T;
  primaryCtaText?: T;
  primaryCtaLink?: T;
  secondaryCtaText?: T;
  secondaryCtaLink?: T;
  trustIndicators?:
    | T
    | {
        text?: T;
        id?: T;
      };
  showScrollIndicator?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "benefits_select".
 */
export interface BenefitsSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  benefits?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        metric?: T;
        id?: T;
      };
  ctaText?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "socialProof_select".
 */
export interface SocialProofSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  stats?:
    | T
    | {
        value?: T;
        suffix?: T;
        label?: T;
        id?: T;
      };
  testimonials?:
    | T
    | {
        name?: T;
        role?: T;
        company?: T;
        content?: T;
        rating?: T;
        avatar?: T;
        id?: T;
      };
  partners?:
    | T
    | {
        name?: T;
        logo?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "demo_select".
 */
export interface DemoSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  videoThumbnail?: T;
  videoTitle?: T;
  videoDescription?: T;
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  ctaText?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "beforeAfter_select".
 */
export interface BeforeAfterSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  beforeItems?:
    | T
    | {
        text?: T;
        id?: T;
      };
  afterItems?:
    | T
    | {
        text?: T;
        id?: T;
      };
  roiStats?:
    | T
    | {
        value?: T;
        suffix?: T;
        label?: T;
        id?: T;
      };
  ctaText?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq_select".
 */
export interface FaqSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  ctaText?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  contactInfo?:
    | T
    | {
        phone?: T;
        phoneHours?: T;
        email?: T;
        emailResponseTime?: T;
        location?: T;
        locationNote?: T;
      };
  demoProcess?:
    | T
    | {
        stepNumber?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  guarantees?:
    | T
    | {
        icon?: T;
        text?: T;
        id?: T;
      };
  finalCTA?:
    | T
    | {
        title?: T;
        description?: T;
        buttonText?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  companyName?: T;
  companyDescription?: T;
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  solutionLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  resourcesLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  contactInfo?:
    | T
    | {
        phone?: T;
        email?: T;
        address?: T;
      };
  bottomLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  status?: T;
  hero?:
    | T
    | {
        badge?: T;
        title?: T;
        subtitle?: T;
        ctaPrimary?: T;
        ctaSecondary?: T;
        trustIndicators?:
          | T
          | {
              icon?: T;
              text?: T;
              id?: T;
            };
      };
  benefits?:
    | T
    | {
        id?: T;
        icon?: T;
        title?: T;
        description?: T;
        metric?: T;
      };
  socialProof?:
    | T
    | {
        stats?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
        testimonials?:
          | T
          | {
              id?: T;
              name?: T;
              role?: T;
              company?: T;
              content?: T;
              rating?: T;
              avatar?: T;
            };
        partners?:
          | T
          | {
              id?: T;
              name?: T;
              logo?: T;
            };
      };
  demo?:
    | T
    | {
        title?: T;
        subtitle?: T;
        features?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
  beforeAfter?:
    | T
    | {
        before?:
          | T
          | {
              text?: T;
              id?: T;
            };
        after?:
          | T
          | {
              text?: T;
              id?: T;
            };
        roi?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
      };
  faq?:
    | T
    | {
        id?: T;
        question?: T;
        answer?: T;
      };
  contact?:
    | T
    | {
        title?: T;
        subtitle?: T;
        phone?: T;
        email?: T;
        address?: T;
        process?:
          | T
          | {
              step?: T;
              title?: T;
              description?: T;
              id?: T;
            };
        guarantees?:
          | T
          | {
              icon?: T;
              text?: T;
              id?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}